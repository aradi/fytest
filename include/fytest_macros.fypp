#:def REQUIRE(COND)
#!
#! Checks the fulfillment of a given condition.
#!
#! If the condition evalutes to .false. the test will be registered as failed and no further code
#! in that test is executed, except for the optional fixture finalizer. If the condition evaluates
#! to .true., test execution is continued.
#!
#! Args:
#!     COND: Condition to be fulfilled.
#!

print *, 'REQUIRE CALLED'
print *, '  COND: ${COND}$'
if (${COND}$) then
  print *, '  COND FULFILLED'
else
  print *, '  COND **NOT** FULFILLED'
end if

#:enddef REQUIRE


#:def TEST(NAME, IMPLEMENTATION, FIXTURE='default')
#!
#! Defines a test case.
#!
#! Args:
#!     NAME: Name of the test
#!     IMPLEMENTATION: Test implementation
#!
#:mute
$:fytest_register_test(NAME, IMPLEMENTATION, FIXTURE)
#:endmute
#:enddef TEST


#!
#! Defines a test suite.
#!
#! Args:
#!     NAME: Name of the test
#!     IMPLEMENTATION: Test implementation
#!
#:def TEST_SUITE(NAME, SPECIFICATION, IMPLEMENTATION)
#:mute
$:fytest_register_test_suite(NAME)
#:endmute
$:fytest_generate_test_suite_code(NAME, SPECIFICATION, IMPLEMENTATION)
#:enddef


#:def TEST_DRIVER()
program test_driver

  $:fytest_driver_import_wrappers()

  $:fytest_driver_run_initializers()

  $:fytest_driver_run_tests()

  $:fytest_driver_run_finalizers()

end program test_driver
#:enddef TEST_DRIVER



#:def TEST_FIXTURE(NAME, SPECIFICATION, IMPLEMENTATION, PARAMETERS=None)
$:fytest_register_fixture(NAME, SPECIFICATION, IMPLEMENTATION, PARAMETERS)
#:enddef TEST_FIXTURE


#:def TEST_INITIALIZER(IMPLEMENTATION)
$:fytest_register_test_initializer(IMPLEMENTATION)
#:enddef TEST_INITIALIZER


#:def TEST_FINALIZER(IMPLEMENTATION)
$:fytest_register_test_finalizer(IMPLEMENTATION)
#:enddef TEST_FINALIZER


#:def TEST_SUITE_INITIALIZER(IMPLEMENTATION)
$:fytest_register_test_suite_initializer(IMPLEMENTATION)
#:enddef TEST_SUITE_INITIALIZER


#:def TEST_SUITE_FINALIZER(IMPLEMENTATION)
$:fytest_register_test_suite_finalizer(IMPLEMENTATION)
#:enddef TEST_SUITE_FINALIZER
