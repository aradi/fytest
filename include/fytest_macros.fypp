#! Checks the fulfillment of a given condition.
#!
#! If the condition evalutes to .false. the test will be registered as failed and no further code
#! in that test is executed, except for the optional fixture finalizer. If the condition evaluates
#! to .true., test execution is continued.
#!
#! Args:
#!     COND: Condition to be fulfilled.
#!
#:def REQUIRE(COND)
$:fytest_render_require(COND)
#:enddef REQUIRE


#! Defines a test case.
#!
#! Args:
#!     NAME: Name of the test
#!     IMPLEMENTATION: Test implementation
#!     FIXTURE: Optional test fixture
#!
#:def TEST(NAME, IMPLEMENTATION, FIXTURE='default')
#:mute
$:fytest_register_test(NAME, IMPLEMENTATION, FIXTURE)
#:endmute
#:enddef TEST


#! Defines a test suite.
#!
#! Args:
#!     NAME: Name of the test
#!     SPECIFICATION: Specification  part of the test suite
#!     IMPLEMENTATION: Test implementation
#!
#:def TEST_SUITE(NAME, SPECIFICATION, IMPLEMENTATION)
#:mute
$:fytest_register_test_suite(NAME)
#:endmute
$:fytest_render_test_suite(NAME, SPECIFICATION, IMPLEMENTATION)
#:mute
$:fytest_reset_current_test_suite()
#:endmute
#:enddef


#! Generates driver code for the test suites.
#!
#! Note: It can only drive those test suites which were generated in the same file.
#!
#:def TEST_DRIVER()
$:fytest_render_test_driver()
#:enddef TEST_DRIVER


#! Defines a test fixture.
#!
#! Args:
#!    NAME: Name of the test fixture
#!    SPECIFICATION: Specification part of the fixture
#!    IMPLEMENTATION: Implementation part of the fixture
#!    PARAMETERS: Optional list of (parameter_name, parameter_array) tuples, where
#!        parameter_name is the name of the iterator variable and parameter_array is
#!        the array it will iterate over.
#!
#:def TEST_FIXTURE(NAME, SPECIFICATION, IMPLEMENTATION, PARAMETERS=None)
$:fytest_register_fixture(NAME, SPECIFICATION, IMPLEMENTATION, PARAMETERS)
#:enddef TEST_FIXTURE


#! Defines a test fixture initializer.
#!
#! Args:
#!     IMPLEMENTATION: Test fixture initializer implementation
#!
#:def TEST_FIXTURE_INITIALIZER(IMPLEMENTATION)
$:fytest_register_test_fixture_initializer(IMPLEMENTATION)
#:enddef TEST_FIXTURE_INITIALIZER


#! Defines a test fixture finalizer.
#!
#! Args:
#!     IMPLEMENTATION: Test fixture finalizer implementation
#!
#:def TEST_FIXTURE_FINALIZER(IMPLEMENTATION)
$:fytest_register_test_fixture_finalizer(IMPLEMENTATION)
#:enddef TEST_FIXTURE_FINALIZER


#! Defines a test suite initializer.
#!
#! Args:
#!     IMPLEMENTATION: Test suite initializer implementation
#!
#:def TEST_SUITE_INITIALIZER(IMPLEMENTATION)
$:fytest_register_test_suite_initializer(IMPLEMENTATION)
#:enddef TEST_SUITE_INITIALIZER


#! Defines a test suite finalizer.
#!
#! Args:
#!     IMPLEMENTATION: Test suite finalizer implementation
#!
#:def TEST_SUITE_FINALIZER(IMPLEMENTATION)
$:fytest_register_test_suite_finalizer(IMPLEMENTATION)
#:enddef TEST_SUITE_FINALIZER


#! Renders the backend library needed for FyTest.
#!
#:def TEST_LIBRARY()
$:fytest_render_test_library()
#:enddef TEST_LIBRARY
